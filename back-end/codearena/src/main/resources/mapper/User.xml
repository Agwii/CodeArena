<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.codearena.user.mapper.UserMapper">

    <resultMap id="userInfoDto" type="UserInfoDto">
        <result column="user_id" property="userId"/>
        <result column="user_email" property="userEmail"/>
        <result column="user_nickname" property="userNickname"/>
        <result column="user_intro" property="userIntro"/>
        <result column="speed_rating" property="speedRating"/>
        <result column="effi_rating" property="effiRating"/>
    </resultMap>

    <resultMap id="tokenDataDto" type="TokenDataDto">
        <result column="user_id" property="userId"/>
        <result column="user_nickname" property="userNickname"/>
        <result column="user_email" property="userEmail"/>
    </resultMap>

    <resultMap id="userFollowInfoDto" type="UserFollowInfoDto">
        <result column="to_id" property="userId"/>
        <result column="user_nickname" property="userNickname"/>
        <result column="user_email" property="userEmail"/>
    </resultMap>

    <resultMap id="userFollowingInfoDto" type="userFollowingInfoDto">
        <result column="from_id" property="userId"/>
        <result column="user_nickname" property="userNickname"/>
        <result column="user_email" property="userEmail"/>
    </resultMap>

    <insert id="join" parameterType="userJoinDto">
        insert into user(user_email, user_password, user_nickname, user_intro) values("${userEmail}" ,"${userPassword}" , "${userNickname}", "${userIntro}");
    </insert>
    
    <select id="checkNickname" parameterType="string" resultType="int">
        select count(*) from user where user_nickname="${nickname}";
    </select>

    <select id="checkEmail" parameterType="string" resultType="int">
        select count(*) from user where user_email="${email}";
    </select>

    <select id="login" parameterType="userLoginDto" resultMap="tokenDataDto">
        select user_id, user_nickname, user_email
        from user
        where user_email=#{userEmail} and user_password=#{userPassword};
    </select>

    <update id="logout" parameterType="string">
        update user
        set refresh_token=NULL
        where user_email=#{userEmail};
    </update>

    <update id="reissue" parameterType="userReissueDto">
        update user set user_password="${tempPassword}" where user_email="${userEmail}";
    </update>

    <select id="searchUser" parameterType="string" resultMap="userInfoDto">
        select user_id, user_email, user_nickname, user_intro, speed_rating, effi_rating
        from user
        where user_nickname=${userNickname};
    </select>

    <select id="getSolvedProblem" parameterType="int" resultType="Integer">
        select distinct problem_id
        from ps_submit
        where user_id="${userId}" and submit_status="맞았습니다."
        order by problem_id;
    </select>

    <select id="getWrongProblem" parameterType="int" resultType="Integer">
        select distinct problem_id
        from ps_submit
        where user_id="${userId}" and submit_status!="맞았습니다."
        order by problem_id;
    </select>

    <update id="saveRefreshToken" parameterType="map">
        update user
        set refresh_token = #{refreshToken}
        where user_email=#{userEmail};
    </update>

    <update id="changePassword" parameterType="userChangePasswordDto">
        update user
        set user_password=#{userPassword}
        where user_email=#{userEmail};
    </update>

    <update id="changeUserInfo" parameterType="userChangeInfoDto">
        update user
        set user_nickname=#{userNickname}, user_intro=#{userIntro}
        where user_id={userId};
    </update>
    
    <insert id="follow" parameterType="userFollowDto">
        insert into follow
        values (#{fromId}, #{toId});
    </insert>

    <delete id="unfollow" parameterType="userFollowDto">
        delete from follow
        where from_id=#{fromId} and to_id=#{toId};
    </delete>

    <select id="getFollowList" parameterType="string" resultMap="userFollowInfoDto">
        select to_id, b.user_nickname, b.user_email
        from follow as a join user b on (b.user_id=a.to_id)
        where from_id="${userId}";
    </select>

    <select id="getFollowingList" parameterType="string" resultMap="userFollowingInfoDto">
        select from_id, b.user_nickname, b.user_email
        from follow as a join user b on (b.user_id=a.from_id)
        where to_id="${userId}";
    </select>
    
</mapper>